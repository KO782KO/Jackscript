/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.InputMismatchException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.WindowConstants;

/**
 *
 * @author Nolan
 */
public class CreateAnOrder extends javax.swing.JFrame {



    /**
     * Creates new form CreateAnOrder
     */
    public CreateAnOrder() throws FileNotFoundException, IOException {
        initComponents();

        
        Iterator a=CustomerDatabase.customer.iterator();
        
        
        ArrayList<Integer> customerIDList=new ArrayList<Integer>();
        
        
        while(a.hasNext()){
            Object temp;
            temp=a.next();
            int customerID=((Customer)temp).getCustomerID();
            customerIDList.add(customerID);
        }
        Collections.sort(customerIDList);
        SelCustomer_ComboBox.setModel(new DefaultComboBoxModel(customerIDList.toArray()));
        
        
        Iterator b=Items.a.iterator();
        
        ArrayList<Integer> productIDList=new ArrayList<Integer>();
        
        while(b.hasNext()){
            Object temp;
            temp=b.next();
            int productID=((Item)temp).getItemId();
            productIDList.add(productID);
        }
        
        Collections.sort(productIDList);
        SelProduct_ComboBox.setModel(new DefaultComboBoxModel(productIDList.toArray()));

        

        
        
        /*this.setDefaultCloseOperation(CreateAnOrder.HIDE_ON_CLOSE);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * 
     * Order entry form class
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics g){
                Graphics2D g2d1=(Graphics2D)g.create();
                RenderingHints hints1 = new RenderingHints(
                    RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                RenderingHints render1 =new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
                hints1.add(render1);
                g2d1.setRenderingHints(hints1);
                java.awt.Polygon p1 = new java.awt.Polygon();
                p1.addPoint(0,0);
                p1.addPoint(0,200);

                p1.addPoint(this.getWidth()+50, 200);
                p1.addPoint(this.getWidth()+50,0);
                java.awt.GradientPaint gp1 = new java.awt.GradientPaint(0.0f,200.0f,new java.awt.Color(20,60,100),
                    0.0f, 0.0f,new java.awt.Color(100,200,200,255), true);

                g2d1.setColor(new java.awt.Color(20,60,100));
                g2d1.fill(getBounds());
                g2d1.setPaint(gp1);
                g2d1.fill(p1);
            }};
            OrderSummary = new javax.swing.JPanel(){
                @Override
                protected void paintComponent(Graphics g){
                    Graphics2D g2d1=(Graphics2D)g.create();
                    RenderingHints hints1 = new RenderingHints(
                        RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                    RenderingHints render1 =new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
                    hints1.add(render1);
                    g2d1.setRenderingHints(hints1);
                    g2d1.setColor(new java.awt.Color(240,240,240,150));
                    g2d1.fillRect(0,0, OrderSummary.getWidth(), OrderSummary.getHeight());

                }};
                OrderSummary.setOpaque(false);
                OrderSummary.setBackground(new java.awt.Color(100,100,100,100));
                PriceField = new javax.swing.JTextField();
                SnHField = new javax.swing.JTextField();
                TotalCostField = new javax.swing.JTextField();
                OrderSummaryScrollPane = new javax.swing.JScrollPane();
                ScrollPaneTextArea = new javax.swing.JTextArea();
                PriceLabel = new javax.swing.JLabel();
                SnHLabel = new javax.swing.JLabel();
                TotalCostLabel = new javax.swing.JLabel();
                CustomerInfo = new javax.swing.JPanel(){
                    @Override
                    protected void paintComponent(Graphics g){
                        Graphics2D g2d1=(Graphics2D)g.create();
                        RenderingHints hints1 = new RenderingHints(
                            RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                        RenderingHints render1 =new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
                        hints1.add(render1);
                        g2d1.setRenderingHints(hints1);
                        g2d1.setColor(new java.awt.Color(240,240,240,150));
                        g2d1.fillRect(0,0, CustomerInfo.getWidth(), CustomerInfo.getHeight());

                    }};
                    SelCustomer_ComboBox = new javax.swing.JComboBox();
                    NameField = new javax.swing.JTextField();
                    AddressField = new javax.swing.JTextField();
                    CustomerTypeField = new javax.swing.JTextField();
                    CustInfoTitle = new javax.swing.JLabel();
                    SelCustLabel = new javax.swing.JLabel();
                    NameLabel = new javax.swing.JLabel();
                    AddressLabel = new javax.swing.JLabel();
                    TypeLabel = new javax.swing.JLabel();
                    BackButton = new javax.swing.JButton();
                    ProductDetails = new javax.swing.JPanel(){
                        @Override
                        protected void paintComponent(Graphics g){
                            Graphics2D g2d1=(Graphics2D)g.create();
                            RenderingHints hints1 = new RenderingHints(
                                RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                            RenderingHints render1 =new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
                            hints1.add(render1);
                            g2d1.setRenderingHints(hints1);
                            g2d1.setColor(new java.awt.Color(240,240,240,150));
                            g2d1.fillRect(0,0, ProductDetails.getWidth(), ProductDetails.getHeight());

                        }};
                        ProductDetails.setOpaque(false);
                        ProductDetails.setBackground(new java.awt.Color(100,100,100,100));
                        ProductDetailsTitle = new javax.swing.JLabel();
                        SelProduct_ComboBox = new javax.swing.JComboBox();
                        ProductNameField = new javax.swing.JTextField();
                        QuantityField = new javax.swing.JTextField();
                        PricePerUnitField = new javax.swing.JTextField();
                        OrderType_ComboBox = new javax.swing.JComboBox();
                        SelProductLabel = new javax.swing.JLabel();
                        ProductNameLabel = new javax.swing.JLabel();
                        QuantityInStockLabel = new javax.swing.JLabel();
                        PricePerUnitLabel = new javax.swing.JLabel();
                        OrderTypeLabel = new javax.swing.JLabel();
                        OrderDetails = new javax.swing.JPanel(){
                            @Override
                            protected void paintComponent(Graphics g){
                                Graphics2D g2d1=(Graphics2D)g.create();
                                RenderingHints hints1 = new RenderingHints(
                                    RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                                RenderingHints render1 =new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
                                hints1.add(render1);
                                g2d1.setRenderingHints(hints1);
                                g2d1.setColor(new java.awt.Color(240,240,240,150));
                                g2d1.fillRect(0,0, OrderDetails.getWidth(), OrderDetails.getHeight());

                            }};
                            OrderDetails.setOpaque(false);

                            OrderDetails.setBackground(new java.awt.Color(100,100,100,100));
                            SubmitButton = new javax.swing.JButton();
                            AmtField = new javax.swing.JTextField();
                            AmtLabel = new javax.swing.JLabel();
                            jLabel1 = new javax.swing.JLabel();
                            IdkField = new javax.swing.JTextField();

                            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                            setTitle("Create Order");

                            OrderSummary.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                            PriceField.setEditable(false);
                            PriceField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    PriceFieldActionPerformed(evt);
                                }
                            });

                            SnHField.setEditable(false);
                            SnHField.setToolTipText("S&H");
                            SnHField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    SnHFieldActionPerformed(evt);
                                }
                            });

                            TotalCostField.setEditable(false);
                            TotalCostField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    TotalCostFieldActionPerformed(evt);
                                }
                            });

                            ScrollPaneTextArea.setColumns(20);
                            ScrollPaneTextArea.setRows(5);
                            ScrollPaneTextArea.setBorder(null);
                            OrderSummaryScrollPane.setViewportView(ScrollPaneTextArea);
                            ScrollPaneTextArea.setEditable(false);

                            PriceLabel.setText("Price:");

                            SnHLabel.setText("Shipping & Handling");

                            TotalCostLabel.setText("Total Cost:");

                            org.jdesktop.layout.GroupLayout OrderSummaryLayout = new org.jdesktop.layout.GroupLayout(OrderSummary);
                            OrderSummary.setLayout(OrderSummaryLayout);
                            OrderSummaryLayout.setHorizontalGroup(
                                OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, OrderSummaryLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(OrderSummaryScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(PriceLabel)
                                        .add(SnHLabel)
                                        .add(TotalCostLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(PriceField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                        .add(SnHField)
                                        .add(TotalCostField))
                                    .add(16, 16, 16))
                            );
                            OrderSummaryLayout.setVerticalGroup(
                                OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(OrderSummaryLayout.createSequentialGroup()
                                    .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(OrderSummaryLayout.createSequentialGroup()
                                            .addContainerGap()
                                            .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                .add(PriceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(PriceLabel))
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                            .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                .add(SnHField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(SnHLabel))
                                            .add(18, 18, 18)
                                            .add(OrderSummaryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                .add(TotalCostField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(TotalCostLabel)))
                                        .add(OrderSummaryLayout.createSequentialGroup()
                                            .add(20, 20, 20)
                                            .add(OrderSummaryScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            );

                            CustomerInfo.setOpaque(false);
                            CustomerInfo.setBackground(new java.awt.Color(100,100,100,100));
                            CustomerInfo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
                            CustomerInfo.setPreferredSize(new java.awt.Dimension(387, 241));

                            SelCustomer_ComboBox.setMaximumRowCount(20);
                            SelCustomer_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-----", "1", "2", "3", "4" }));
                            SelCustomer_ComboBox.setToolTipText("-----------");
                            SelCustomer_ComboBox.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    SelCustomer_ComboBoxActionPerformed(evt);
                                }
                            });

                            NameField.setEditable(false);
                            NameField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    NameFieldActionPerformed(evt);
                                }
                            });

                            AddressField.setEditable(false);
                            AddressField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    AddressFieldActionPerformed(evt);
                                }
                            });

                            CustomerTypeField.setEditable(false);
                            CustomerTypeField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    CustomerTypeFieldActionPerformed(evt);
                                }
                            });

                            CustInfoTitle.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
                            CustInfoTitle.setText("Customer Information");

                            SelCustLabel.setText("Select a customer");

                            NameLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            NameLabel.setText("Name:");

                            AddressLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            AddressLabel.setText("Address:");

                            TypeLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            TypeLabel.setText("Customer Type:");

                            org.jdesktop.layout.GroupLayout CustomerInfoLayout = new org.jdesktop.layout.GroupLayout(CustomerInfo);
                            CustomerInfo.setLayout(CustomerInfoLayout);
                            CustomerInfoLayout.setHorizontalGroup(
                                CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(CustomerInfoLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(CustInfoTitle)
                                        .add(CustomerInfoLayout.createSequentialGroup()
                                            .add(6, 6, 6)
                                            .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(CustomerInfoLayout.createSequentialGroup()
                                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(NameLabel)
                                                        .add(AddressLabel)
                                                        .add(TypeLabel))
                                                    .add(37, 37, 37)
                                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                        .add(NameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 225, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, CustomerTypeField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, AddressField))))
                                                .add(CustomerInfoLayout.createSequentialGroup()
                                                    .add(SelCustLabel)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 224, Short.MAX_VALUE)
                                                    .add(SelCustomer_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                    .add(13, 13, 13)))))
                                    .addContainerGap(20, Short.MAX_VALUE))
                            );
                            CustomerInfoLayout.setVerticalGroup(
                                CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(CustomerInfoLayout.createSequentialGroup()
                                    .add(4, 4, 4)
                                    .add(CustInfoTitle)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(SelCustomer_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(SelCustLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(NameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(NameLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(AddressField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(AddressLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(CustomerInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(CustomerTypeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(TypeLabel))
                                    .addContainerGap(107, Short.MAX_VALUE))
                            );

                            BackButton.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
                            BackButton.setText("Back to Menu");
                            BackButton.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    BackButtonActionPerformed(evt);
                                }
                            });

                            ProductDetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

                            ProductDetailsTitle.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
                            ProductDetailsTitle.setText("Product Details:");

                            SelProduct_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                            SelProduct_ComboBox.setToolTipText("Select");
                            SelProduct_ComboBox.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    SelProduct_ComboBoxActionPerformed(evt);
                                }
                            });

                            ProductNameField.setEditable(false);

                            QuantityField.setEditable(false);
                            QuantityField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    QuantityFieldActionPerformed(evt);
                                }
                            });

                            PricePerUnitField.setEditable(false);

                            OrderType_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-----------", "In-Store", "Online ($4 S&H)" }));
                            OrderType_ComboBox.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    OrderType_ComboBoxActionPerformed(evt);
                                }
                            });

                            SelProductLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            SelProductLabel.setText("Select a product:");

                            ProductNameLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            ProductNameLabel.setText("Product Name:");

                            QuantityInStockLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            QuantityInStockLabel.setText("Quantity in stock:");

                            PricePerUnitLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            PricePerUnitLabel.setText("Price per unit:");

                            OrderTypeLabel.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
                            OrderTypeLabel.setText("Order Type:");

                            org.jdesktop.layout.GroupLayout ProductDetailsLayout = new org.jdesktop.layout.GroupLayout(ProductDetails);
                            ProductDetails.setLayout(ProductDetailsLayout);
                            ProductDetailsLayout.setHorizontalGroup(
                                ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(ProductDetailsLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(ProductDetailsLayout.createSequentialGroup()
                                            .add(OrderTypeLabel)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(OrderType_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(ProductDetailsLayout.createSequentialGroup()
                                            .add(SelProductLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(SelProduct_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, ProductDetailsLayout.createSequentialGroup()
                                            .add(PricePerUnitLabel)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(PricePerUnitField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, ProductDetailsLayout.createSequentialGroup()
                                            .add(QuantityInStockLabel)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(QuantityField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, ProductDetailsLayout.createSequentialGroup()
                                            .add(ProductDetailsTitle)
                                            .add(0, 0, Short.MAX_VALUE))
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, ProductDetailsLayout.createSequentialGroup()
                                            .add(ProductNameLabel)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(ProductNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .addContainerGap())
                            );
                            ProductDetailsLayout.setVerticalGroup(
                                ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(ProductDetailsLayout.createSequentialGroup()
                                    .add(6, 6, 6)
                                    .add(ProductDetailsTitle)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(SelProduct_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(SelProductLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(ProductNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(ProductNameLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(QuantityField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(QuantityInStockLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(PricePerUnitField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(PricePerUnitLabel))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(ProductDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(OrderType_ComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(OrderTypeLabel))
                                    .add(35, 35, 35))
                            );

                            OrderDetails.setBackground(new java.awt.Color(255, 255, 255));
                            OrderDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

                            SubmitButton.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
                            SubmitButton.setText("Submit");
                            SubmitButton.setToolTipText("");
                            SubmitButton.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    SubmitButtonActionPerformed(evt);
                                }
                            });

                            AmtField.setText("          ");
                            AmtField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    AmtFieldActionPerformed(evt);
                                }
                            });

                            AmtLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                            AmtLabel.setText("Amount of product");

                            jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                            jLabel1.setText("Order Details");

                            org.jdesktop.layout.GroupLayout OrderDetailsLayout = new org.jdesktop.layout.GroupLayout(OrderDetails);
                            OrderDetails.setLayout(OrderDetailsLayout);
                            OrderDetailsLayout.setHorizontalGroup(
                                OrderDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(OrderDetailsLayout.createSequentialGroup()
                                    .add(26, 26, 26)
                                    .add(OrderDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(OrderDetailsLayout.createSequentialGroup()
                                            .add(AmtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                                            .add(SubmitButton))
                                        .add(AmtLabel))
                                    .addContainerGap())
                                .add(OrderDetailsLayout.createSequentialGroup()
                                    .add(73, 73, 73)
                                    .add(jLabel1)
                                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            );
                            OrderDetailsLayout.setVerticalGroup(
                                OrderDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, OrderDetailsLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(jLabel1)
                                    .add(34, 34, 34)
                                    .add(AmtLabel)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(OrderDetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(AmtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(SubmitButton))
                                    .addContainerGap(86, Short.MAX_VALUE))
                            );

                            IdkField.setEditable(false);
                            IdkField.setBackground(new java.awt.Color(238, 238, 238));
                            IdkField.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
                            IdkField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                            IdkField.setAutoscrolls(false);
                            IdkField.setBorder(null);
                            IdkField.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    IdkFieldActionPerformed(evt);
                                }
                            });

                            org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
                            jPanel3.setLayout(jPanel3Layout);
                            jPanel3Layout.setHorizontalGroup(
                                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel3Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(BackButton)
                                        .add(jPanel3Layout.createSequentialGroup()
                                            .add(CustomerInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 407, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(18, 18, 18)
                                            .add(ProductDetails, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .add(jPanel3Layout.createSequentialGroup()
                                            .add(OrderDetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(30, 30, 30)
                                            .add(OrderSummary, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(IdkField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 775, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .addContainerGap(30, Short.MAX_VALUE))
                            );
                            jPanel3Layout.setVerticalGroup(
                                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel3Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .add(BackButton)
                                    .add(18, 18, 18)
                                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(ProductDetails, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(CustomerInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(OrderSummary, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(OrderDetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(18, 18, 18)
                                    .add(IdkField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(35, Short.MAX_VALUE))
                            );

                            org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
                            getContentPane().setLayout(layout);
                            layout.setHorizontalGroup(
                                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            );
                            layout.setVerticalGroup(
                                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            );

                            pack();
                        }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // exit
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // selects customer & item to submit order
        Customer customer=CustomerDatabase.customer.get(SelCustomer_ComboBox.getSelectedIndex());
        Item tempItem=Items.a.get(SelProduct_ComboBox.getSelectedIndex());
        Items oItem=new Items();
        
        IdkField.setVisible(false);
        String entry=(AmtField.getText()).trim();
        int quantityRequested=-1;
        int quantity=tempItem.getQuantity();
        //while(quantityRequested==-1){
            try{
                quantityRequested=Integer.parseInt(entry);
            
            }catch(InputMismatchException ime){
                ime.toString();
                IdkField.setVisible(true);
                IdkField.setText("Please enter a whole number...i.e. 5");
                AmtField.replaceSelection("");
                
            }catch(NumberFormatException nfe){
                nfe.toString();
                IdkField.setVisible(true);
                IdkField.setText("Please enter a whole number...like 5");
                AmtField.replaceSelection("");
            }
            catch(Exception e){
                e.toString();
                IdkField.setVisible(true);
                IdkField.setText("Please enter a whole number...i.e. 5");
                AmtField.replaceSelection("");
            }finally{}

        //If quantity requested exceeds quantity, rejects order
        if(quantityRequested>quantity){
            IdkField.setVisible(true);
            IdkField.setText("Sorry, the quantity ordered exceeds our inventory");
            AmtField.replaceSelection("");
        
        //if quantity requested is within inventory amount
        }else if((quantityRequested<=quantity)&&(quantityRequested!=-1)){
            IdkField.setVisible(false);
            //gets price
            double price=oItem.getOrderPrice(customer, tempItem, quantityRequested);
            //sets final price of item ordered
            double finalPrice=price;
            //adds shipping to price
            Boolean shippingCharged=oItem.addShipping(OrderType_ComboBox.getSelectedIndex());
            SnHField.setText("$0.00");
            //calcualates shipping charge 
            if(shippingCharged){
                int shipping = 4;
                finalPrice=price+shipping;
                SnHField.setText("$4.00");
                SnHField.setVisible(true);
            }
            PriceField.setVisible(true);
            PriceField.setText("$"+price);
            TotalCostField.setVisible(true);
            TotalCostField.setText("$"+finalPrice);
            //makes sale of item and sends to inventory file
            oItem.sellAnItem(shippingCharged, tempItem, customer, quantityRequested, finalPrice);
            //summarizes order
            ScrollPaneTextArea.setText(oItem.orderSummary());
            int qoh=Integer.parseInt(QuantityField.getText());
            int updated=qoh-quantityRequested;
            QuantityField.setText(""+updated);
            
            
            
        }else{
            IdkField.setVisible(true);
            IdkField.setText("Please enter a whole number, such as 5");
        }
        
        
        
        
        
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void IdkFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdkFieldActionPerformed
        
        
    }//GEN-LAST:event_IdkFieldActionPerformed

    private void SnHFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SnHFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SnHFieldActionPerformed

    private void SelCustomer_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelCustomer_ComboBoxActionPerformed
        // fetches customer information

        Collections.sort(CustomerDatabase.customer);
        Customer customers=CustomerDatabase.customer.get(SelCustomer_ComboBox.getSelectedIndex());

        IdkField.setVisible(false);
        NameField.setText(customers.getCustomerName());
        AddressField.setText(customers.getAddress());
        CustomerTypeField.setText(customers.getType());
        if(SelCustomer_ComboBox.getSelectedIndex()>=0){
            NameField.setVisible(true);
            AddressField.setVisible(true);
            CustomerTypeField.setVisible(true);
        }
    }//GEN-LAST:event_SelCustomer_ComboBoxActionPerformed

    private void SelProduct_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelProduct_ComboBoxActionPerformed
        // TODO add your handling code here:
        Collections.sort(Items.a);
        Item oItem=Items.a.get(SelProduct_ComboBox.getSelectedIndex());
        Items oItems=new Items();
        
        IdkField.setVisible(false);
        ProductNameField.setText(oItem.getItemName());
        QuantityField.setText(""+oItem.getQuantity());
        PricePerUnitField.setText("$"+oItem.getSellingPrice());
        ProductNameField.setVisible(true);
        ProductNameField.setVisible(true);
        PricePerUnitField.setVisible(true);
    }//GEN-LAST:event_SelProduct_ComboBoxActionPerformed

    private void AmtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmtFieldActionPerformed

    }//GEN-LAST:event_AmtFieldActionPerformed

    private void PriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceFieldActionPerformed
        
    }//GEN-LAST:event_PriceFieldActionPerformed

    private void OrderType_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderType_ComboBoxActionPerformed
        // TODO add your handling code here:
        //gets inventory items for display
        Items oItems=new Items();
        IdkField.setVisible(false);
        //gets item information
        int orderType=OrderType_ComboBox.getSelectedIndex();
        boolean shippingCharged=oItems.addShipping(orderType);
        double shippingFee=4.00;
        String shipping="$"+shippingFee+"0";
        if(shippingCharged){
            SnHField.setText(shipping);
            
        }else{
            SnHField.setText("$0.00");
        }
    }//GEN-LAST:event_OrderType_ComboBoxActionPerformed

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NameFieldActionPerformed

    private void TotalCostFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalCostFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalCostFieldActionPerformed

    private void AddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressFieldActionPerformed

    private void CustomerTypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerTypeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerTypeFieldActionPerformed

    private void QuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuantityFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAnOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAnOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAnOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAnOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CreateAnOrder().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(CreateAnOrder.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(CreateAnOrder.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressField;
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField AmtField;
    private javax.swing.JLabel AmtLabel;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CustInfoTitle;
    private javax.swing.JPanel CustomerInfo;
    private javax.swing.JTextField CustomerTypeField;
    private javax.swing.JTextField IdkField;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JPanel OrderDetails;
    private javax.swing.JPanel OrderSummary;
    private javax.swing.JScrollPane OrderSummaryScrollPane;
    private javax.swing.JLabel OrderTypeLabel;
    private javax.swing.JComboBox OrderType_ComboBox;
    private javax.swing.JTextField PriceField;
    private javax.swing.JLabel PriceLabel;
    private javax.swing.JTextField PricePerUnitField;
    private javax.swing.JLabel PricePerUnitLabel;
    private javax.swing.JPanel ProductDetails;
    private javax.swing.JLabel ProductDetailsTitle;
    private javax.swing.JTextField ProductNameField;
    private javax.swing.JLabel ProductNameLabel;
    private javax.swing.JTextField QuantityField;
    private javax.swing.JLabel QuantityInStockLabel;
    javax.swing.JTextArea ScrollPaneTextArea;
    private javax.swing.JLabel SelCustLabel;
    private javax.swing.JComboBox SelCustomer_ComboBox;
    private javax.swing.JLabel SelProductLabel;
    private javax.swing.JComboBox SelProduct_ComboBox;
    private javax.swing.JTextField SnHField;
    private javax.swing.JLabel SnHLabel;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JTextField TotalCostField;
    private javax.swing.JLabel TotalCostLabel;
    private javax.swing.JLabel TypeLabel;
    private javax.swing.JLabel jLabel1;
    javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
